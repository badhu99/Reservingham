version: '1'

networks:
  network_microservice:
    name: test-network
    driver: bridge
    external: true

services:
  service-api-gateway:
    container_name: ${CONTAINER_API_GATEWAY_NAME}
    image: image-service-api-gateway
    environment:
      - PORT=${PORT_API_GATEWAY}
      - URL_AUTH=http://${CONTAINER_AUTHENTICATION_NAME}:${PORT_AUTH}
      - URL_MANAGEMENT=http://${CONTAINER_MANAGEMENT_NAME}:${PORT_MANAGEMENT}
      - URL_CONTENT_MANAGEMENT=http://${CONTAINER_CONTENT_MANAGEMENT_NAME}:${PORT_CONTENT_MANAGEMENT}
    ports:
      - "${PORT_API_GATEWAY}:${PORT_API_GATEWAY}"
    networks:
      - network_microservice
  
  service-authentication:
      image: image-service-authentication
      container_name: ${CONTAINER_AUTHENTICATION_NAME}
      environment:
        - PORT=${PORT_AUTH}
        - SQL_DATABASE_URL=${DB_URL}
        - JWT_SECRET=${SECRET}
      ports:
        - "${PORT_AUTH}:${PORT_AUTH}"
      networks:
        - network_microservice

  service-management:
      image: image-service-management
      container_name: ${CONTAINER_MANAGEMENT_NAME}
      environment:
        - PORT=${PORT_MANAGEMENT}
        - SQL_DATABASE_URL=${DB_URL}
        - JWT_SECRET=${SECRET}
      ports:
        - "${PORT_MANAGEMENT}:${PORT_MANAGEMENT}"
      networks:
        - network_microservice

  service-content-management:
      image: image-content-management-service
      container_name: ${CONTAINER_CONTENT_MANAGEMENT_NAME}
      environment:
        - PORT=${PORT_CONTENT_MANAGEMENT}
        - SQL_DATABASE_URL=${DB_URL_CONTENT_MANAGEMENTE}
        - JWT_SECRET=${SECRET}
      ports:
        - "${PORT_CONTENT_MANAGEMENT}:${PORT_CONTENT_MANAGEMENT}"
      networks:
        - network_microservice